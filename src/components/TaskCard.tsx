import React, { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Textarea } from "@/components/ui/textarea";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { 
  MapPin, 
  Wrench, 
  User, 
  Calendar,
  FileText,
  Edit,
  MoreVertical,
  CheckCircle,
  XCircle,
  Clock,
  MessageCircle,
  Paperclip
} from "lucide-react";

interface TaskCardProps {
  task: any;
  isOpen: boolean;
  onClose: () => void;
}

export default function TaskCard({ task, isOpen, onClose }: TaskCardProps) {
  const [comment, setComment] = useState("");
  const [timeline] = useState([
    {
      id: 1,
      type: "status_change",
      author: "–û–ª–µ–∫—Å—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      action: "–∑–º—ñ–Ω–∏–≤ —Å—Ç–∞—Ç—É—Å –Ω–∞ –£ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ",
      timestamp: "25.09.2025, 09:15",
      icon: "üë§"
    },
    {
      id: 2,
      type: "comment",
      author: "–û–ª–µ–∫—Å—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      content: "–ü—Ä–∏–±—É–≤ –Ω–∞ –æ–±'—î–∫—Ç. –ü–æ—á–∏–Ω–∞—é –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É –º–æ–¥–µ–º–∞.",
      timestamp: "25.09.2025, 09:16",
      icon: "üí¨"
    },
    {
      id: 3,
      type: "files",
      author: "–û–ª–µ–∫—Å—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      action: "–¥–æ–¥–∞–≤ 2 —Ñ–∞–π–ª–∏: photo_1.jpg, photo_2.jpg",
      timestamp: "25.09.2025, 14:30",
      icon: "üìé"
    },
    {
      id: 4,
      type: "status_change",
      author: "–û–ª–µ–∫—Å—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      action: "–∑–º—ñ–Ω–∏–≤ —Å—Ç–∞—Ç—É—Å –Ω–∞ –ù–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—ñ",
      timestamp: "25.09.2025, 16:00",
      icon: "üë§"
    }
  ]);

  const getStatusColor = (status: string) => {
    switch (status) {
      case "–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ": return "secondary";
      case "–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ": return "default";
      case "–£ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ": return "warning";
      case "–ù–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—ñ": return "default";
      case "–ó–∞–≤–µ—Ä—à–µ–Ω–æ": return "success";
      case "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ": return "destructive";
      default: return "secondary";
    }
  };

  const getStatusBgColor = (status: string) => {
    switch (status) {
      case "–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ": return "bg-muted";
      case "–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ": return "bg-blue-50 text-blue-700";
      case "–£ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ": return "bg-yellow-50 text-yellow-700";
      case "–ù–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—ñ": return "bg-orange-50 text-orange-700";
      case "–ó–∞–≤–µ—Ä—à–µ–Ω–æ": return "bg-green-50 text-green-700";
      case "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ": return "bg-red-50 text-red-700";
      default: return "bg-muted";
    }
  };

  if (!task) return null;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader className="pb-4 border-b border-border">
          {/* 1. –®–∞–ø–∫–∞ –∑–∞–≤–¥–∞–Ω–Ω—è */}
          <div className="flex items-start justify-between">
            <div className="flex-1">
              <DialogTitle className="text-xl font-bold">
                {task.title || "–ü–ª–∞–Ω–æ–≤–µ –¢–û-1: –ö–æ–º–ø–ª–µ–∫—Å –¢–ú –Ω–∞ –ü–° '–ö–∏—ó–Ω–∫–∞'"}
              </DialogTitle>
              <div className="flex items-center gap-2 mt-2">
                <Badge variant={getStatusColor(task.status)} className={getStatusBgColor(task.status)}>
                  {task.status}
                </Badge>
                <span className="text-sm text-muted-foreground font-mono bg-muted px-2 py-1 rounded">
                  {task.id}
                </span>
              </div>
            </div>
          </div>
        </DialogHeader>

        <div className="space-y-6 py-4">
          {/* 2. –ë–ª–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {/* –û–±'—î–∫—Ç */}
                <div className="flex items-start gap-3">
                  <MapPin className="h-5 w-5 text-muted-foreground mt-0.5" />
                  <div>
                    <div className="text-sm text-muted-foreground">–û–±'—î–∫—Ç</div>
                    <div className="font-medium text-primary hover:underline cursor-pointer">
                      {task.location || "–ü–° 110/35/10 '–ì–æ—Ä–æ–¥–Ω—è'"}
                    </div>
                    <div className="text-xs text-muted-foreground">
                      –º. –ì–æ—Ä–æ–¥–Ω—è, –≤—É–ª. –ï–Ω–µ—Ä–≥–µ—Ç–∏–∫—ñ–≤, 15
                    </div>
                  </div>
                </div>

                {/* –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è */}
                <div className="flex items-start gap-3">
                  <Wrench className="h-5 w-5 text-muted-foreground mt-0.5" />
                  <div>
                    <div className="text-sm text-muted-foreground">–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è</div>
                    <div className="font-medium text-primary hover:underline cursor-pointer">
                      –ö–æ–º–ø–ª–µ–∫—Å –¢–ú –Ω–∞ –ü–° 110/35/10 "–ì–æ—Ä–æ–¥–Ω—è"
                    </div>
                    <div className="text-xs text-muted-foreground">
                      –Ü–Ω–≤. –Ω–æ–º–µ—Ä: INV-2024-001
                    </div>
                  </div>
                </div>
              </div>

              {/* –û–ø–∏—Å –∑–∞–≤–¥–∞–Ω–Ω—è */}
              <div className="flex items-start gap-3">
                <FileText className="h-5 w-5 text-muted-foreground mt-0.5" />
                <div className="flex-1">
                  <div className="text-sm text-muted-foreground">–û–ø–∏—Å –∑–∞–≤–¥–∞–Ω–Ω—è</div>
                  <div className="mt-1 text-sm">
                    {task.description || "–ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –ø–ª–∞–Ω–æ–≤–æ–≥–æ —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –¢–û-1 –∫–æ–º–ø–ª–µ–∫—Å—É —Ç–µ–ª–µ–º–µ—Ö–∞–Ω—ñ–∫–∏. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—ñ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Å–∏—Å—Ç–µ–º–∏, –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–≤'—è–∑–∫—É, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ."}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* 3. –ë–ª–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª—é */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">–í–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {/* –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å */}
                <div className="flex items-center gap-3">
                  <User className="h-5 w-5 text-muted-foreground" />
                  <div>
                    <div className="text-sm text-muted-foreground">–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å (–Ü–Ω–∂–µ–Ω–µ—Ä)</div>
                    <div className="font-medium">{task.engineer || "–û–ª–µ–∫—Å—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ"}</div>
                  </div>
                </div>

                {/* –¢–µ—Ä–º—ñ–Ω–∏ */}
                <div className="flex items-center gap-3">
                  <Calendar className="h-5 w-5 text-muted-foreground" />
                  <div>
                    <div className="text-sm text-muted-foreground">–¢–µ—Ä–º—ñ–Ω–∏</div>
                    <div className="space-y-1">
                      <div className="text-sm">
                        <span className="text-muted-foreground">–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞:</span>{" "}
                        <span className="font-medium">{task.scheduledDate || "25.09.2025"}</span>
                      </div>
                      {task.completedDate && (
                        <div className="text-sm">
                          <span className="text-muted-foreground">–ó–∞–≤–µ—Ä—à–µ–Ω–æ:</span>{" "}
                          <span className="font-medium">{task.completedDate}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* 4. –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –±–ª–æ–∫ (–Ü—Å—Ç–æ—Ä—ñ—è —Ç–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è) */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">–Ü—Å—Ç–æ—Ä—ñ—è —Ç–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {/* –ü–æ–ª–µ –¥–ª—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è */}
              <div className="space-y-2">
                <div className="flex gap-2">
                  <Textarea
                    placeholder="–î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä..."
                    value={comment}
                    onChange={(e) => setComment(e.target.value)}
                    className="flex-1 min-h-[80px]"
                  />
                </div>
                <div className="flex justify-between">
                  <Button variant="outline" size="sm">
                    <Paperclip className="h-4 w-4 mr-2" />
                    –ü—Ä–∏–∫—Ä—ñ–ø–∏—Ç–∏ —Ñ–∞–π–ª–∏
                  </Button>
                  <Button size="sm" disabled={!comment.trim()}>
                    –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä
                  </Button>
                </div>
              </div>

              {/* –°—Ç—Ä—ñ—á–∫–∞ –ø–æ–¥—ñ–π */}
              <div className="space-y-3 pt-4 border-t border-border">
                <h4 className="text-sm font-medium">–°—Ç—Ä—ñ—á–∫–∞ –ø–æ–¥—ñ–π</h4>
                <div className="space-y-3 max-h-64 overflow-y-auto">
                  {timeline.map((event) => (
                    <div key={event.id} className="flex gap-3 text-sm">
                      <div className="text-lg">{event.icon}</div>
                      <div className="flex-1">
                        <div className="flex items-center gap-2">
                          <span className="font-medium">{event.author}</span>
                          <span className="text-muted-foreground">
                            {event.action || (event.content ? "–¥–æ–¥–∞–≤ –∫–æ–º–µ–Ω—Ç–∞—Ä:" : "")}
                          </span>
                        </div>
                        {event.content && (
                          <div className="mt-1 p-2 bg-muted/50 rounded text-sm">
                            "{event.content}"
                          </div>
                        )}
                        <div className="text-xs text-muted-foreground mt-1">
                          {event.timestamp}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>

          {/* 5. –ü–∞–Ω–µ–ª—å –¥—ñ–π */}
          <Card>
            <CardContent className="pt-6">
              <div className="flex flex-wrap gap-2 justify-between">
                <div className="flex gap-2">
                  {task.status === "–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ" && (
                    <Button>
                      <Clock className="h-4 w-4 mr-2" />
                      –í–∑—è—Ç–∏ –≤ —Ä–æ–±–æ—Ç—É
                    </Button>
                  )}
                  {task.status === "–£ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ" && (
                    <Button>
                      <CheckCircle className="h-4 w-4 mr-2" />
                      –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–∞ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
                    </Button>
                  )}
                  {task.status === "–ù–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—ñ" && (
                    <>
                      <Button variant="default" className="bg-green-600 hover:bg-green-700 text-white">
                        <CheckCircle className="h-4 w-4 mr-2" />
                        –ó–∞—Ç–≤–µ—Ä–¥–∏—Ç–∏
                      </Button>
                      <Button variant="destructive">
                        <XCircle className="h-4 w-4 mr-2" />
                        –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞ –¥–æ–æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è
                      </Button>
                    </>
                  )}
                </div>
                
                <div className="flex gap-2">
                  <Button variant="outline" size="sm">
                    <Edit className="h-4 w-4" />
                  </Button>
                  <Button variant="outline" size="sm">
                    <MoreVertical className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </DialogContent>
    </Dialog>
  );
}